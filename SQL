use booksproject

insert into book(author_id,publisher_id,title,category,price,link)values
(1,1,'Hunger Games','Fiction',1500,'https://th.bing.com/th/id/OIP.LWX54UcVA8GUFTFtzr6KdwHaLM?w=203&h=307&c=7&r=0&o=5&pid=1.7%22'),
(2,1,'The Master Piece','Art',2000,'https://th.bing.com/th/id/OIP.BYHbxeI77KBWmLOSrP0QgQAAAA?w=190&h=287&c=7&r=0&o=5&pid=1.7%22'),
(3,1,'Interstellar','Science',1500,'https://th.bing.com/th/id/OIP.1G6f4MrYV9u61SF9i6kk0QHaLH?w=204&h=306&c=7&r=0&o=5&pid=1.7%22'),
(4,2,'The Conjuring','Horror',1500,'https://th.bing.com/th/id/OIP.FM6y3O8k2igajktzi4igMQHaLb?w=201&h=310&c=7&r=0&o=5&pid=1.7%22'),
(5,2,'The Travel Book','Travel',2500,'https://th.bing.com/th/id/OIP.RpliCOPd-n0THbznEJ9puQAAAA?w=204&h=291&c=7&r=0&o=5&pid=1.7%22'),
(6,2,'Maze Runner','Fiction',2500,'https://th.bing.com/th/id/OIP.lKiJqs0JrTrKlb9nv3yPdQHaLG?w=204&h=306&c=7&r=0&o=5&pid=1.7%22'),
(7,3,'Art of Rivalry','Art',3500,'https://th.bing.com/th/id/R.797493b75f5a07cd4d0ca8c97505937e?rik=AyZARav41PWFnw&riu=http%3a%2f%2fimages.randomhouse.com%2fcover%2f700jpg%2f9780812985078&ehk=NZOT2rYh4ezAeuLBS0UEk6bvMdQzBC96HYmZX%2f7NGWo%3d&risl=&pid=ImgRaw&r=0'),
(8,3,'Oppenhiemer','Science',3500,'https://th.bing.com/th/id/OIP.q-ns5gnryakOXu4IOeS9pgHaLW?w=201&h=309&c=7&r=0&o=5&pid=1.7%22'),
(9,3,'Pet Sematary','Horror',600,'https://th.bing.com/th/id/OIP.dZtOxWVelqQsO8fW1jFhDwHaMT?w=193&h=322&c=7&r=0&o=5&pid=1.7%22'),
(10,4,'The Holiday','Travel',800,'https://th.bing.com/th/id/OIP.43J271zD30GOjTxfIow_ngHaLV?w=202&h=309&c=7&r=0&o=5&pid=1.7%22'),
(11,4,'Blue Lock','Manga',1800,'https://th.bing.com/th/id/OIP.ZhxU-GHj7eWLNHb1FBwHkgHaLH?w=203&h=304&c=7&r=0&o=5&pid=1.7'),
(12,4,'Naruto','Manga',2000,'https://d28hgpri8am2if.cloudfront.net/book_images/onix/cvr9781421579757/naruto-vol-70-9781421579757_hr.jpg'),
(13,5,'One Piece','Manga',2100,'https://th.bing.com/th/id/R.3d2b70540e6ac7140d54846952f29d98?rik=7jGg5JMfdTHVoQ&riu=http%3a%2f%2fd28hgpri8am2if.cloudfront.net%2fbook_images%2fcvr9781421541136_9781421541136_hr.jpg&ehk=pHowSQKEP5wkfVpvMQ1e4%2fv8ielLRFy2x61svw3kCkQ%3d&risl=&pid=ImgRaw&r=0'),
(14,5,'Attack On titan','Manga',3800,'https://images.faraos.dk/ItemImages/JAN131196/medium/JAN131196.jpg'),
(15,5,'Demon Slayer','Manga',1670,'https://d28hgpri8am2if.cloudfront.net/book_images/onix/cvr9781974704552/demon-slayer-kimetsu-no-yaiba-vol-10-9781974704552_hr.jpg');

 

 

 

insert into author values
('Suzanne Collins'),
('Fiona Davis'),
('George Martin'),
('N. K. Aning '),
('Bill Rogers'),
('James Dashner'),
('Sebastian Smee'),
('Martin Sherwin'),
('Stephen King'),
('T.M. Logan'),
('Muneyuki Kaneshiro'),
('Masashi Kishimoto'),
('Eiichiro Oda'),
('Hajime Isayama'),
('Koyoharu Gotouge');

 
select * from customer

select * from author;

select * from order_items

select * from publisher;

insert into publisher(country,publisher_name) values 
('Japan','SR Publishers'),
('USA','Star Publishers'),
('England','NOVA Publishers'),
('Canada','MRD Publishers'),
('Germany','RK Publishers'),
('Japan','Manga Publishers');




use booksproject
-- book to inventory trigger
create trigger insert_into_inventry on book
for insert 
as
begin
    insert into inventory select book_id,20 from inserted;
end

 

alter table customer add unique(email)
alter table customer add unique(mobile_no)

 alter table admin add unique(email)

--insert into author values('author1'),('author2'),('author3')

 select * from author

--insert into publisher(publisher_name,country) values('kkks','India'),('md','Dubai')

 

select * from book
select * from inventory

select * from author

--insert into book(author_id,publisher_id,title,category,price) values(1,1,'ABC','Fiction',300),(1,2,'XYZ','Nonfiction',400)

 

select * from customer
select * from cart

 

insert into customer(cust_name,email,password,gender,mobile_no,address)
values('Kiran','kiran@gmail.com','Kiran@123','M',8328319281,'Mg Street, VZM'),
('Raju','raju@gmail.com','Raju@123','M',8328319990,'Mg Street, VZM')

 

select * from customer
truncate table customer


--insert into cart(book_id,cust_id,price,quantity) values(1,1,300,1)

 

 

insert into admin(
	name,email,password) values ('Admin','admin@gmail.com','Admin@123')

 

select * from book
select * from cart


--------------------------------------------------------------------------------------
insert into book(author_id,publisher_id,title,category,price,link)values
(1,1,'Hunger Games','Fiction',500,'https://th.bing.com/th/id/OIP.LWX54UcVA8GUFTFtzr6KdwHaLM?w=203&h=307&c=7&r=0&o=5&pid=1.7%22'),
(2,1,'The Master Piece','Art',500,'https://th.bing.com/th/id/OIP.BYHbxeI77KBWmLOSrP0QgQAAAA?w=190&h=287&c=7&r=0&o=5&pid=1.7%22'),
(3,2,'Interstellar','Science',1500,'https://th.bing.com/th/id/OIP.1G6f4MrYV9u61SF9i6kk0QHaLH?w=204&h=306&c=7&r=0&o=5&pid=1.7%22'),
(4,2,'The Conjuring','Horror',1500,'https://th.bing.com/th/id/OIP.FM6y3O8k2igajktzi4igMQHaLb?w=201&h=310&c=7&r=0&o=5&pid=1.7%22'),
(5,3,'The Travel Book','Travel',2500,'https://th.bing.com/th/id/OIP.RpliCOPd-n0THbznEJ9puQAAAA?w=204&h=291&c=7&r=0&o=5&pid=1.7%22'),
(1,3,'The Maze Runner','Fiction',2500,'https://th.bing.com/th/id/OIP.lKiJqs0JrTrKlb9nv3yPdQHaLG?w=204&h=306&c=7&r=0&o=5&pid=1.7%22'),
(2,4,'The Art of Rivalry','Art',3500,'https://th.bing.com/th/id/OIP.MwhPx4xKfVdwr_tf_YRDfAAAAA?w=115&h=180&c=7&r=0&o=5&pid=1.7%22'),
(3,4,'American Prometheus','Science',3500,'https://th.bing.com/th/id/OIP.q-ns5gnryakOXu4IOeS9pgHaLW?w=201&h=309&c=7&r=0&o=5&pid=1.7%22'),
(4,5,'Pet Sematary','Horror',600,'https://th.bing.com/th/id/OIP.dZtOxWVelqQsO8fW1jFhDwHaMT?w=193&h=322&c=7&r=0&o=5&pid=1.7%22'),
(5,5,'The Holiday','Travel',800,'https://th.bing.com/th/id/OIP.43J271zD30GOjTxfIow_ngHaLV?w=202&h=309&c=7&r=0&o=5&pid=1.7%22');

 

 

insert into author values
('Oppenhiemer'),
('Peter Hamsworth'),
('Christhoper Nolan'),
('Jenifier Williams'),
('Andrew Tate');

 
insert into publisher(country,publisher_name) values
('Japan','Legion Publishers'),
('USA','Blue Star Publishers'),
('England','NOVA Publishers'),
('Canada','MRD Publishers'),
('India','RK Publishers');

--alter table payment add payment_date datetime;
alter procedure makePayment @customerId int ,@amount money ,@coupon varchar(20)
as
   -- declare @cust_id int;
    -- select @cust_id = cust_id from customer where email = @email and password = @password;

    if(@customerId is not null)
    begin
        declare @sum money;  
        declare @dis_amount money;
        --select * from cart;
		select @sum = sum(price * quantity)  from cart where cust_id = @customerId;

		select @dis_amount = dis_amount from coupon where coupon_code like @coupon;

		if( @dis_amount is  null)
        begin
			set @dis_amount = 0;
        end

			set @sum = @sum - @dis_amount;
            --declare @amount_after_tax money;
            --set @amount_after_tax = @sum*(0.05) + @sum;

			--print @amount_after_tax
			print @amount
			print  @sum
            if(@amount = @sum)
            begin
                --print 'payment success';
                insert into Payment(cust_id,cart_value, discount,tax,total_amount,payment_date)  values(@customerId,@sum +@dis_amount,@dis_amount,0,@sum,GETDATE());  
            end
            else
                print 'invalid amount'

	end
    else 
        print 'invalid user or emali'

exec makePayment 3,3000,'kiran'

select * from cart

select * from payment

--drop procedure makePayment

insert into coupon(coupon_code,dis_amount) values('coupon50',50),('coupon1000',1000)












------------------
-- Trigger to insert order detials and order items
alter trigger order_details on payment
for insert
as
begin
    declare @cust_id int;
    declare @total_amount money;
    declare @order_id int;

	declare @temp_table table(id int identity(1,1),book_id int, quantity int);

	

    select @cust_id= cust_id , @total_amount = total_amount from inserted;
    insert into orders(cust_id,total_amount,order_date) values(@cust_id,@total_amount,getdate());

 
	
    select @order_id = order_id from orders;

 

    insert into order_items(order_id,cust_id,book_id,quantity,amount) select @order_id,@cust_id, book_id, quantity,price from cart where cust_id = @cust_id;

	-- updating inventory
	insert into @temp_table(book_id,quantity) select book_id,quantity from cart where cust_id = @cust_id;
	declare @total_rows int;
	declare @counter int;
	set @counter = 1;

	select @total_rows = count(*) from cart where cust_id = @cust_id;
	
	declare @temo_bid int;
	declare @temp_qua int;
	while(@counter <= @total_rows)
	begin
		select @temo_bid = book_id,@temp_qua = quantity from @temp_table where id = @counter;
		print '----------'
		print 'Quantity' 
		print @temp_qua
		print 'BookId' 
		print @temo_bid
		--update inventory set quantity = (select quantity from inventory where book_id = @temo_bid) - @temp_qua where book_id = @temo_bid;

		set @counter = @counter + 1;

	end

	delete from cart where cust_id = @cust_id;

 end

--drop trigger order_details

select * from orders
select * from order_items
select * from payment

select * from coupon

select* from inventory

select * from book


-- popular book 
alter procedure popular_book
as
	truncate table popular_books
	insert into popular_books(book_id,quantity,total_spent) select top 5 book_id,sum(quantity) as total_purcahse, sum(amount) as total_spent from order_items group by book_id order by total_purcahse desc
	--select * from popular_books;

exec popular_book
--------------------
--drop procedure popular_books;



create table popular_books
(p_id int identity(1,1) primary key,
book_id int foreign key references book(book_id),
quantity int,
total_spent float);

select * from popular_books

---------------------------

alter procedure increaseCartQuantity  @cartId int, @bookId int
as
	declare @cartQuantity int
	declare @inventoryQuantity int

	select @cartQuantity = quantity from cart where cart_id = @cartId 
	update cart set quantity = @cartQuantity + 1 where cart_id = @cartId;

	select @inventoryQuantity = quantity from inventory where book_id = @bookId 
	update inventory set quantity = @inventoryQuantity - 1 where book_id = @bookId;

exec increaseCartQuantity 11,15

select * from cart
select * from inventory
------------------------------------------------------------------
alter procedure decreaseCartQuantity  @cartId int, @bookId int
as
	declare @cartQuantity int
	declare @inventoryQuantity int

	select @cartQuantity = quantity from cart where cart_id = @cartId 
	update cart set quantity = @cartQuantity - 1 where cart_id = @cartId;

	select @inventoryQuantity = quantity from inventory where book_id = @bookId 
	update inventory set quantity = @inventoryQuantity + 1 where book_id = @bookId;



exec decreaseCartQuantity 31,3

-----------------------------------------------------
alter procedure updateInventory @bookId int,@quantity int
as
    
	update inventory set quantity = (select quantity from inventory where book_id=@bookId) + @quantity where book_id=@bookId

exec updateInventory 3,10

-----------------------------------------

create procedure getInventoryByBookId @bookId int
as
    
	select * from  inventory where book_id=@bookId

exec getInventoryByBookId 3

--------------------------------------------------------------
select * from author
select * from cart
select * from inventory
select * from book
select * from admin
select * from publisher
select * from order_items
select * from popular_books
select * from customer
select * from payment
select * from coupon
select * from orders

update book set title='Harry Potter' where book_id = 1

select * from coupon
update coupon set coupon_code='coupon100' where coupon_id =2

update coupon set dis_amount=100 where coupon_id =2


insert into author values('Robert Kiyosaki'),('Conan Doyle')

delete from customer where cust_id = 7;
